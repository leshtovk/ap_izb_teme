getwd()
library(ggplot2)
fix(diamonds)
?diamonds
rm(list = objects())
fix(Sonar)
fix(Sonar)
data(Sonar)
?glm
?predict
?Sonar
library(mlbench)
install.packages("mlbench")
data(Sonar)
data("Sonar")
library(mlbench)
data(Sonar)
attach(Sonar)
n <- nrow(Sonar)
per.rows <- sample(n)
split <- round(n * 0.6)
Sonar <- Sonar[per.rows, ]
set.train <- Sonar[1:split, ]
set.test <- Sonar[(split + 1):n, ]
model <- glm(Class ~., family = "binomial", data = set.train)
model.prob <- predict(model, newdata = set.test, type = "response")
install.packages("caTools")
pred.class <- ifelse(model.prob > 0.8, "M", "R")
pred.class <- factor(pred.class, levels = levels(set.test[, "Class"]))
library(caret)
install.packages("caret")
confusionMatrix(pred.class, set.test[, "Class"])
library(caret)
library(caret)
confusionMatrix(pred.class, set.test[, "Class"])
install.packages("e1071")
confusionMatrix(pred.class, set.test[, "Class"])
install.packages("caret")
library(caret)
install.packages("caTools")
library(caTools)
confusionMatrix(pred.class, set.test[, "Class"])
library(e1071)
install.packages("e1071")
confusionMatrix(pred.class, set.test[, "Class"])
colAUC(model.prob. set.test[, "Class"], plotROC = TRUE)
colAUC(model.prob, set.test[, "Class"], plotROC = TRUE)
model2 <- glm(Class ~., data = set.train)
model2 <- glm(Class ~., family = "binomial", data = set.train)
mode2.prob <- predict(model2, newdata = set.test, type = "response")
model2.prob <- predict(model2, newdata = set.test, type = "response")
rm(mode2.prob)
pred2.class <- ifelse(p > 0.0, "M", "R")
pred2.class <- ifelse(model.pred > 0.0, "M", "R")
pred2.class <- ifelse(model.prob > 0.0, "M", "R")
pred2.class <- factor(pred2.class, levels = leves(set.train[, "Class"]))
pred2.class <- factor(pred2.class, levels = levess(set.train[, "Class"]))
pred2.class <- factor(pred2.class, levels = levels(set.train[, "Class"]))
confusionMatrix(pred2.class, set.test[, "Class"])
model.auc <- colAUC(pred.class, set.test[, "Class"], plotROC = FALSE)
model.auc <- colAUC(model.prob, set.test[, "Class"], plotROC = FALSE)
model.auc
rm(list = objects())
getwd()
# x_(n+1) = rx_n(1-x_n)
# x in [0, 1]
# r in [0, 4]
x <- rep(0, times = 300)
f <- function (x, x0, r) {
x[1] = x0
for (i in 2:length(x)) {
x[i] = r * x[i-1] * (1 - x[i-1])
}
}
f(x, 0, 1)
x
f(x, 1, 1)
x
f(x, 0.1, 1)
x
x
f(x, 0.1, 1)
x
f(x, 0.5, 2)
x
f <- function (x, x0, r) {
x[1] = x0
for (i in 2:length(x)) {
x[i] = r * x[i-1] * (1 - x[i-1])
}
}
f <- function (x, x0, r) {
x[1] = x0
for (i in 2:length(x)) {
x[i] = r * x[i-1] * (1 - x[i-1])
}
return(x)
}
f(x, 0.5, 2)
f(x, 0.1, 2)
f(x, 0.2, 1)
x1 <- f(x, 0.2, 1)
x
x1
y1 <- x1
x1 <- 1:length(y1)
plot(x1, y1)
pdf("veritasium.pdf")
par(mfrow = c(1:10))
par(mfrow = c(1, 10))
r.range <- seq(from = 0, to = 4)
rm(x1, y1)
rm(x)
x.range <- rep(0, times = 300)
r.range <- seq(from = 0, to = 4, length = 10)
x <- rep(0, times = 300)
x.range <- seq(from = 0, to = 1, length = 10)
F <- function(x, x.range, r.range, f) {
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i]), r.range[j])
}
}
dev.off()
}
F(x, x.range, r.range, f)
F <- function(x, x.range, r.range, f) {
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i], r.range[j])
}
}
dev.off()
}
F <- function(x, x.range, r.range, f) {
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i], r.range[j]))
}
}
dev.off()
}
F(x, x.range, r.range, f)
dev.off()
F(x, x.range, r.range, f)
F <- function(x, x.range, r.range, f) {
pdf("veritasium.pdf")
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i], r.range[j]))
}
}
dev.off()
}
F(x, x.range, r.range, f)
"1" + "1"
c("1", "1")
paste("X = ", 1, sep = "")
F <- function(x, x.range, r.range, f) {
pdf("veritasium.pdf")
for (i in 1:10){
for (j in 1:10){
title <- paste("x0 = ", x.range[i], ", ", "r = ", r.range[j])
plot(1:300, f(x, x.range[i], r.range[j]), main = title)
}
}
dev.off()
}
F(x, x.range, r.range, f)
seq(from = 0, to = 4, length = 40)
seq(from = 0, to = 4, length = 41)
r.range = seq(from = 0, to = 4, lenght = 41)
r.range = seq(from = 0, to = 4, length.out =  = 41)
r.range <- seq(from = 0, to = 4, length = 41)
seq(from = 0, to = 1, length = 11)
x.range <- seq(from = 0, to = 1, length = 11)
F <- function(x, x.range, r.range, f) {
pdf("veritasium.pdf")
for (i in 1:length(x.range)){
for (j in 1:length(r.range)){
title <- paste("x0 = ", x.range[i], ", ", "r = ", r.range[j])
plot(1:300, f(x, x.range[i], r.range[j]), main = title)
}
}
dev.off()
}
F(x, x.range, r.range, f)
# x = 0.1
# r in [0, 4]
file.edit("veritasium.r")
seq(from = 0, to = 4, length = 401)
seq(from = 0.1, to = 0.9, lenght = 9)
seq(from = 0.1, to = 0.9, length = 9)
source("veritasium.r")
F(x, x0, r.range, f)
seq(from = 3, to = 4, length = 1001)
seq(from = 3, to = 4, length = 501)
source("veritasium.r")
F(x, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
# 3.738 - 3.74
source("veritasium.r")
source("veritasium.r")
F(x2, x0, r.range3, f, "ver_3.738-3.74.pdf")
source("veritasium.r")
F(x2, x0, r.range3, f, "ver_3.738-3.74.pdf")
rm(list = objects())
setwd("~/repos/itap/veritasium")
file.edit("veritasium.r")
source("veritasium.r")
F(x, x0, r.range2, "ver_3-4.pdf")
F(x, x0, r.range2, f, "ver_3-4.pdf")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
setwd("~/repos/itap")
rm(list = objects())
library(caret)
?preProcess
?nearZeroVar
getwd()
setwd("~/repos/itap")
file.edit("predloga_template.r")
file.edit("predloga_template.R")
setwd("~/repos/itap/DN1")
ls
file.edit("predloga_template.R")
source("predloga_template.R")
source("predloga_template.R")
source("predloga_template.R")
source("predloga_template.R")
source("predloga_template.R")
source("predloga_template.R")
rm(list = objects())
rm(list = objects())
source("predloga_template.R")
source("predloga_template.R")
source("predloga_template.R")
source("predloga_template.R")
setwd("~/repos/itap/vaja1")
file.edit("vaja1_1.r")
file.edit("vaja1_2.r")
setwd("~/repos/itap/vaja2")
file.edit("vaja2_1.r")
file.edit("vaja2_2.r")
setwd("~/repos/itap/vaja3")
file.edit("vaja3_1.r")
setwd("~/repos/itap/DN1/naloga1")
file.edit("naloga1.r")
rm(list = objects())
source("naloga1.r")
source("naloga1.r")
source("naloga1.r")
source("naloga1.r")
rm(list = objects())
library(caret)
data1 <- read.csv("podatki1.csv")
head(data1)
str(data1)
data1$y <- as.factor(data$y)
y <- as.factor(data$y)
y <- data$y
data1$y <- as.factor(data1$y)
str(data1$y)
head(data1)
str(data1)
rm(list = objects())
source("naloga1.r")
str(data1)
source("naloga1.r")
truePositives
rm(list = objects())
source("naloga1.r")
truePositives
str(truePositives)
rm(list = objects())
source("naloga1.r")
auc
?colAUC
auc[, 1]
str(auc)
rm(list = objects())
source("naloga1.r")
auc
rm(list = objects())
source("naloga1.r")
auc
rm(list = objects())
source("naloga1.r")
auc
rm(list = objects())
source("naloga1.r")
lev <- levels(data1$x6)
lev1 <- levels(data1$x6)
rm(lev)
lev1
lev1 <- levels(data1$y)
lev2 <- levels(data1$x6)
levs <- c(lev1, lev2)
levs
y' < c()
s
dsd
q()
dasd
''
y' <- c()
''
y` <- 4
``
rm(list = objects())
source("naloga1.r")
A <- expand.grid(x = data1$y, y = data1$x6)
A
rm(A)
lvs1 <- levels(data1$y)
lvs2 <- levels(data1$x6)
lvs <- expand.grid(x = lvs1, y = lvs2)
lvs
str(lvs)
source("naloga1.r")
y1 <- newTarget(data1$y, data1$x6)
warnings()
source("naloga1.r")
y1 <- newTarget(data1$y, data1$x6)
warnings
warnings()
rm(list = objects())
source("naloga1.r")
getlvs <- getLevels(data1$y, data1$x6)
getlvs <- getLeves(data1$y, data1$x6)
getlvs
A <- rep(matrix(c("", ""), ncol = 2), times = 3)
A
paste("(", 0, ", ", 1, ")")
rm(list = objects())
source("naloga1.r")
lvs <- getLevels(data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
lvs <- getLevels(data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
lvs <- getLevels(data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
l <- level_vecotr(data1$y, data1$x6)
l <- level_vector(data1$y, data1$x6)
paste("(", 0, ", ", 1, ")")
a <- paste("(", 0, ", ", 1, ")")
str(num)
str(a)
sprintf(a)
b <- sprintf(a)
str(b)
rm(list = objects())
source("naloga1.r")
l <- level_vector(data1$y, data1$x6)
print(data1$y[3])
a <- data1$y
a <- as.character(a)
a
a <- data1$y
a <- data1$y[3]
a
a <- as.character(a)
a
rm(list = objects())
source("naloga1.r")
l <- level_vector(data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
l <- level_vector(data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
l.frame <- createLevels(data1$y, data1$x6)
l.frame
l.frame[1, 1]
a <- l.frame[1, 1]
a
a <- as.character(a)
a
rm(list = objects())
source("naloga1.r")
lvs <- createLevels(data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
lvs <- createLevels(data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
lvs <- createLevels(data1$y, data1$x6)
lvs
source("naloga1.r")
lvs <- createLevels(data1$y, data1$x6)
lvs
rm(list = objects())
source("naloga1.r")
source("naloga1.r")
l <- createNewTarget(data1, y, x6)
l
source("naloga1.r")
l <- createNewTarget(data1, y, x6)
rm(list = objects())
source("naloga1.r")
l <- createNewTarget(data1, data1$y, data1$y)
l
l <- createNewTarget(data1, data1$y, data1$x6)
l
rm(list = objects())
source("naloga1.r")
l <- createNewTarget(data1, data1$y, data1$x6)
l
rm(list = objects())
source("naloga1.r")
l <- createNewTarget(data1, data1$y, data1$x6)
l
rm(list = objects())
source("naloga1.r")
l <- createNewTarget(data1, data1$y, data1$x6)
l
head(l)
rm(list = objects())
source("naloga1.r")
l <- createNewTarget(data1, data1$y, data1$x6)
rm(list = objects())
source("naloga1.r")
l <- createNewTarget(data1, data1$y, data1$x6)
str(l)
head(l)
rm(list = objects())
source("naloga1.r")
createNewTarget(data1, data1$y, data1$x6)
head(data1)
rm(list = objects())
source("naloga1.r")
y1 <- createNewTarget(data1, data1$y, data1$x6)
data1$y1 <- y1
head(data1)
str(data1)
rm(list = objects())
source("naloga1.r")
str(data1)
head(data1)
?group
?group_by
grouped <- data1 %>% group_by(y1)
grouped <- data1 > group_by(y1)
library(dplyr)
grouped <- data1 > group_by(y1)
grouped <- data1 > group_by(data1$y1)
data1 > group_by(data1$y1)
grouped <- group_by(data1, data1$y1)
grouped
head(grouped)
str(grouped)
summary(grouped)
rm(list = objects())
source("naloga1.r")
head(data1)
str(data1)
rm(list = objects())
source("naloga1.r")
head(data1)
str(data1)
l <- levels(data1$y1)
l
rm(list = objects())
source("naloga1.r")
c <- countGroups(y1)
c
sum(c)
c
levels(y1)
findLevels(data1$y, data1$x6)
index.min <- which.min(c)
levels(y1)[index.min]
rm(list = objects())
source("naloga1.r")
smallest_group
rm(list = objects())
source("naloga1.r")
smallest_group
