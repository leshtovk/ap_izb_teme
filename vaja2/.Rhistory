getwd()
library(ggplot2)
fix(diamonds)
?diamonds
rm(list = objects())
fix(Sonar)
fix(Sonar)
data(Sonar)
?glm
?predict
?Sonar
library(mlbench)
install.packages("mlbench")
data(Sonar)
data("Sonar")
library(mlbench)
data(Sonar)
attach(Sonar)
n <- nrow(Sonar)
per.rows <- sample(n)
split <- round(n * 0.6)
Sonar <- Sonar[per.rows, ]
set.train <- Sonar[1:split, ]
set.test <- Sonar[(split + 1):n, ]
model <- glm(Class ~., family = "binomial", data = set.train)
model.prob <- predict(model, newdata = set.test, type = "response")
install.packages("caTools")
pred.class <- ifelse(model.prob > 0.8, "M", "R")
pred.class <- factor(pred.class, levels = levels(set.test[, "Class"]))
library(caret)
install.packages("caret")
confusionMatrix(pred.class, set.test[, "Class"])
library(caret)
library(caret)
confusionMatrix(pred.class, set.test[, "Class"])
install.packages("e1071")
confusionMatrix(pred.class, set.test[, "Class"])
install.packages("caret")
library(caret)
install.packages("caTools")
library(caTools)
confusionMatrix(pred.class, set.test[, "Class"])
library(e1071)
install.packages("e1071")
confusionMatrix(pred.class, set.test[, "Class"])
colAUC(model.prob. set.test[, "Class"], plotROC = TRUE)
colAUC(model.prob, set.test[, "Class"], plotROC = TRUE)
model2 <- glm(Class ~., data = set.train)
model2 <- glm(Class ~., family = "binomial", data = set.train)
mode2.prob <- predict(model2, newdata = set.test, type = "response")
model2.prob <- predict(model2, newdata = set.test, type = "response")
rm(mode2.prob)
pred2.class <- ifelse(p > 0.0, "M", "R")
pred2.class <- ifelse(model.pred > 0.0, "M", "R")
pred2.class <- ifelse(model.prob > 0.0, "M", "R")
pred2.class <- factor(pred2.class, levels = leves(set.train[, "Class"]))
pred2.class <- factor(pred2.class, levels = levess(set.train[, "Class"]))
pred2.class <- factor(pred2.class, levels = levels(set.train[, "Class"]))
confusionMatrix(pred2.class, set.test[, "Class"])
model.auc <- colAUC(pred.class, set.test[, "Class"], plotROC = FALSE)
model.auc <- colAUC(model.prob, set.test[, "Class"], plotROC = FALSE)
model.auc
rm(list = objects())
getwd()
# x_(n+1) = rx_n(1-x_n)
# x in [0, 1]
# r in [0, 4]
x <- rep(0, times = 300)
f <- function (x, x0, r) {
x[1] = x0
for (i in 2:length(x)) {
x[i] = r * x[i-1] * (1 - x[i-1])
}
}
f(x, 0, 1)
x
f(x, 1, 1)
x
f(x, 0.1, 1)
x
x
f(x, 0.1, 1)
x
f(x, 0.5, 2)
x
f <- function (x, x0, r) {
x[1] = x0
for (i in 2:length(x)) {
x[i] = r * x[i-1] * (1 - x[i-1])
}
}
f <- function (x, x0, r) {
x[1] = x0
for (i in 2:length(x)) {
x[i] = r * x[i-1] * (1 - x[i-1])
}
return(x)
}
f(x, 0.5, 2)
f(x, 0.1, 2)
f(x, 0.2, 1)
x1 <- f(x, 0.2, 1)
x
x1
y1 <- x1
x1 <- 1:length(y1)
plot(x1, y1)
pdf("veritasium.pdf")
par(mfrow = c(1:10))
par(mfrow = c(1, 10))
r.range <- seq(from = 0, to = 4)
rm(x1, y1)
rm(x)
x.range <- rep(0, times = 300)
r.range <- seq(from = 0, to = 4, length = 10)
x <- rep(0, times = 300)
x.range <- seq(from = 0, to = 1, length = 10)
F <- function(x, x.range, r.range, f) {
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i]), r.range[j])
}
}
dev.off()
}
F(x, x.range, r.range, f)
F <- function(x, x.range, r.range, f) {
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i], r.range[j])
}
}
dev.off()
}
F <- function(x, x.range, r.range, f) {
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i], r.range[j]))
}
}
dev.off()
}
F(x, x.range, r.range, f)
dev.off()
F(x, x.range, r.range, f)
F <- function(x, x.range, r.range, f) {
pdf("veritasium.pdf")
for (i in 1:10){
for (j in 1:10){
plot(1:300, f(x, x.range[i], r.range[j]))
}
}
dev.off()
}
F(x, x.range, r.range, f)
"1" + "1"
c("1", "1")
paste("X = ", 1, sep = "")
F <- function(x, x.range, r.range, f) {
pdf("veritasium.pdf")
for (i in 1:10){
for (j in 1:10){
title <- paste("x0 = ", x.range[i], ", ", "r = ", r.range[j])
plot(1:300, f(x, x.range[i], r.range[j]), main = title)
}
}
dev.off()
}
F(x, x.range, r.range, f)
seq(from = 0, to = 4, length = 40)
seq(from = 0, to = 4, length = 41)
r.range = seq(from = 0, to = 4, lenght = 41)
r.range = seq(from = 0, to = 4, length.out =  = 41)
r.range <- seq(from = 0, to = 4, length = 41)
seq(from = 0, to = 1, length = 11)
x.range <- seq(from = 0, to = 1, length = 11)
F <- function(x, x.range, r.range, f) {
pdf("veritasium.pdf")
for (i in 1:length(x.range)){
for (j in 1:length(r.range)){
title <- paste("x0 = ", x.range[i], ", ", "r = ", r.range[j])
plot(1:300, f(x, x.range[i], r.range[j]), main = title)
}
}
dev.off()
}
F(x, x.range, r.range, f)
# x = 0.1
# r in [0, 4]
file.edit("veritasium.r")
seq(from = 0, to = 4, length = 401)
seq(from = 0.1, to = 0.9, lenght = 9)
seq(from = 0.1, to = 0.9, length = 9)
source("veritasium.r")
F(x, x0, r.range, f)
seq(from = 3, to = 4, length = 1001)
seq(from = 3, to = 4, length = 501)
source("veritasium.r")
F(x, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
source("veritasium.r")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
# 3.738 - 3.74
source("veritasium.r")
source("veritasium.r")
F(x2, x0, r.range3, f, "ver_3.738-3.74.pdf")
source("veritasium.r")
F(x2, x0, r.range3, f, "ver_3.738-3.74.pdf")
rm(list = objects())
setwd("~/repos/itap/veritasium")
file.edit("veritasium.r")
source("veritasium.r")
F(x, x0, r.range2, "ver_3-4.pdf")
F(x, x0, r.range2, f, "ver_3-4.pdf")
F(x2, x0, r.range2, f, "ver_3-4.pdf")
setwd("~/repos/itap")
rm(list = objects())
library(caret)
?preProcess
?nearZeroVar
setwd("~/repos/itap/vaja2")
getwd()
library(caret)
set.seed(123)
N = 5000
m = 10
# create the data
A <- matrix(rnorm(N * m), ncol = m)
head(A)
dim(A)
podatki <- data.frame(A)
y <- y = 1 + A[, 1] - 2 * A[, 2] +
(A[, 4] * A[, 5] - A[, 3] * A[, 6]) / 3 + rnorm(N, 0, 0.01)
y <- 1 + A[, 1] - 2 * A[, 2] +
(A[, 4] * A[, 5] - A[, 3] * A[, 6]) / 3 + rnorm(N, 0, 0.01)
podatki$y <- y
head(podatki)
file.edit('vaja2_1.r')
rm(list = objects())
source('vaja2_1.r')
source('vaja2_1.r')
rm(list = objects())
source('vaja2_1.r')
source('vaja2_1.r')
head(y)
head(podatki)
source('vaja2_1.r')
source('vaja2_1.r')
source('vaja2_1.r')
source('vaja2_1.r')
summary(natrenirano)
?which
a <- c(0, 1, 1, 1, 0)
which(a == 0)
rm(list = objects())
asdasda
source("vaja2_1.r")
source("vaja2_1.r")
model$finalModel
rm(list = objects())
source("vaja2_1.r")
model$finalModel
model$finalModel$coefficients
str(model$finalModel)
posind <- which(model$finalModel$coefficients > 0)
posind
posind <- which(model$finalModel$coefficients[-1] > 0)
posind <- which(model$finalModel$coefficients[-1] > 0)
model$finalModel$coefficients[posind]
model$finalModel$coefficients[-1][posind]
model$finalModel$coefficients[-1][-posind]
data[1]
source("vaja2_1.r")
source("vaja2_1.r")
?modelQuality
?modelQuality
??modelQuality
data$y
d <- dim(data)
data[, d[2]]
rm(list = objects())
source("vaja2_1.r")
modelQuality(model, testSet)
source("vaja2_1.r")
modelQuality(model, testSet)
modelQuality(model, testSet)
modelQuality(model, testSet)
modelQuality(model, testSet)
source("vaja2_1.r")
modelQuality(model, testSet)
modelError(model, testSet)
modelError(model, testSet)
modelError(model, testSet)
source("vaja2_1.r")
features
features
source("vaja2_1.r")
optErrors
?which.min
a <- c(1, 2, 3)
a <- a[a < 2]
a
rm(list = objects())
source("vaja2_1.r")
source("vaja2_1.r")
source("vaja2_1.r")
source("vaja2_1.r")
length(Data)
length(data)
source("vaja2_1.r")
source("vaja2_1.r")
pdf("num_of_predictors.pdf")
plot(1:(length(data) - 1), optErrors,
xlab = "number of predictors",
ylab = "RMSE"
)
dev.off()
source("vaja2_1.r")
betas
order(-abs(betas))
a <- order(-abs(betas))
sortedNames <- names[a]
sortedNames
names
source("vaja2_1.r")
